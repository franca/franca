#

pluginName = Franca Edit Support
providerName = www.example.org

_UI_CreateChild_text = {0}
_UI_CreateChild_text2 = {1} {0}
_UI_CreateChild_text3 = {1}
_UI_CreateChild_tooltip = Create New {0} Under {1} Feature
_UI_CreateChild_description = Create a new child of type {0} for the {1} feature of the selected {2}.
_UI_CreateSibling_description = Create a new sibling of type {0} for the selected {2}, under the {1} feature of their parent.

_UI_PropertyDescriptor_description = The {0} of the {1}

_UI_FModel_type = FModel
_UI_Import_type = Import
_UI_FTypeCollection_type = FType Collection
_UI_FInterface_type = FInterface
_UI_FMethod_type = FMethod
_UI_FBroadcast_type = FBroadcast
_UI_FAttribute_type = FAttribute
_UI_FArgument_type = FArgument
_UI_FType_type = FType
_UI_FModelElement_type = FModel Element
_UI_FVersion_type = FVersion
_UI_FArrayType_type = FArray Type
_UI_FCompoundType_type = FCompound Type
_UI_FTypeDef_type = FType Def
_UI_FTypedElement_type = FTyped Element
_UI_FVariable_type = FVariable
_UI_FStructType_type = FStruct Type
_UI_FEnumerator_type = FEnumerator
_UI_FEnumerationType_type = FEnumeration Type
_UI_FMapType_type = FMap Type
_UI_FTypeRef_type = FType Ref
_UI_FAnnotation_type = FAnnotation
_UI_FAnnotationBlock_type = FAnnotation Block
_UI_FContract_type = FContract
_UI_FDeclaration_type = FDeclaration
_UI_FStateGraph_type = FState Graph
_UI_FState_type = FState
_UI_FTransition_type = FTransition
_UI_FTrigger_type = FTrigger
_UI_FEventOnIf_type = FEvent On If
_UI_FGuard_type = FGuard
_UI_FUnionType_type = FUnion Type
_UI_FField_type = FField
_UI_FBlockExpression_type = FBlock Expression
_UI_FAssignment_type = FAssignment
_UI_FExpression_type = FExpression
_UI_FConstant_type = FConstant
_UI_FIntegerConstant_type = FInteger Constant
_UI_FBooleanConstant_type = FBoolean Constant
_UI_FStringConstant_type = FString Constant
_UI_FBinaryOperation_type = FBinary Operation
_UI_Unknown_type = Object

_UI_Unknown_datatype= Value

_UI_FModel_name_feature = Name
_UI_FModel_name_description = the package declaration for this model file
_UI_FModel_imports_feature = Imports
_UI_FModel_imports_description = the list of import statements for this model
_UI_FModel_interfaces_feature = Interfaces
_UI_FModel_interfaces_description = the list of interfaces which are defined in this model
_UI_FModel_typeCollections_feature = Type Collections
_UI_FModel_typeCollections_description = the list of type collections in this model
_UI_Import_importedNamespace_feature = Imported Namespace
_UI_Import_importedNamespace_description = the namespace which is addressed by this import
_UI_Import_importURI_feature = Import URI
_UI_Import_importURI_description = the URI of the imported resource
_UI_FTypeCollection_version_feature = Version
_UI_FTypeCollection_version_description = the version of this entity. The Apache major/minor scheme is applied.
_UI_FTypeCollection_types_feature = Types
_UI_FTypeCollection_types_description = the list of Franca types defined in this entity.
_UI_FInterface_attributes_feature = Attributes
_UI_FInterface_attributes_description = the list of attributes defined for this interface.
_UI_FInterface_methods_feature = Methods
_UI_FInterface_methods_description = the list of methods defined by this interface.
_UI_FInterface_broadcasts_feature = Broadcasts
_UI_FInterface_broadcasts_description = the list of broadcasts defined by this interface
_UI_FInterface_contract_feature = Contract
_UI_FInterface_contract_description = the contract of this interface. A contract specifies the semantics of the interface, e.g., the order of the events across this interface.
_UI_FInterface_base_feature = Base
_UI_FInterface_base_description = the base interface. Franca allows single inheritance.
_UI_FMethod_fireAndForget_feature = Fire And Forget
_UI_FMethod_fireAndForget_description = a flag which indicates that this method will be just a request from client to server without response. The property will be set to a concrete string if the flag is set (e.g., the string "fireAndForget"). Do not rely on the actual value of this string. If the property is null, the flag isn't set. It can be set only for methods without output arguments.
_UI_FMethod_inArgs_feature = In Args
_UI_FMethod_inArgs_description = the list of input arguments for this method (aka input parameters).
_UI_FMethod_outArgs_feature = Out Args
_UI_FMethod_outArgs_description = the list of output arguments for this methods (aka return values).
_UI_FMethod_errorEnum_feature = Error Enum
_UI_FMethod_errorEnum_description = if this property is not null, it represents a definition of method error codes by referencing an enumeration type specified elsewhere. The enumerators of this enumeration type are the error codes the method might return. The enumeration type referenced here might reference a base enumeration. If this property is null, check the errors property instead.
_UI_FMethod_errors_feature = Errors
_UI_FMethod_errors_description = if this property is not null, it represents a definition of method error codes by explicitly specifying a list of enumerators. These enumerators are the error codes the method might return. The enumeration type specified here might reference a base enumeration. If this property is null, check the errorEnum property instead.
_UI_FBroadcast_outArgs_feature = Out Args
_UI_FBroadcast_outArgs_description = the parameters of this broadcast
_UI_FBroadcast_selective_feature = Selective
_UI_FBroadcast_selective_description = a flag which indicates that this broadcast will not always be send to all clients. The property will be set to a concrete string if the flag is set (e.g., the string "selective"). Do not rely on the actual value of this string. If the property is null, the flag isn't set.
_UI_FAttribute_readonly_feature = Readonly
_UI_FAttribute_readonly_description = if the attribute is readonly, this property is set to a string (e.g., the string "readonly"). Otherwise, it is set to null.  Do not rely on the value of the string.
_UI_FAttribute_noSubscriptions_feature = No Subscriptions
_UI_FAttribute_noSubscriptions_description = if the attribute doesn't support subscriptions, this property is set to a string value (e.g., "noSubscriptions"). Otherwise, it is set to null. Do not rely on the value of the string.
_UI_FModelElement_name_feature = Name
_UI_FModelElement_name_description = the name of this element
_UI_FModelElement_comment_feature = Comment
_UI_FModelElement_comment_description = the structured comment for this element (if any)
_UI_FVersion_major_feature = Major
_UI_FVersion_major_description = the major number of this version specification (e.g., the "1" in "1.0").
_UI_FVersion_minor_feature = Minor
_UI_FVersion_minor_description = the minor number of this version specification (e.g., the "0" in "1.0").
_UI_FArrayType_elementType_feature = Element Type
_UI_FArrayType_elementType_description = the type of this array's elements
_UI_FCompoundType_elements_feature = Elements
_UI_FCompoundType_elements_description = the elements (aka fields) of this compound type
_UI_FTypeDef_actualType_feature = Actual Type
_UI_FTypeDef_actualType_description = the actual type for this type alias
_UI_FTypedElement_type_feature = Type
_UI_FTypedElement_type_description = the actual type of this typed element. The type might be predefined or user-defined.
_UI_FTypedElement_array_feature = Array
_UI_FTypedElement_array_description = if the typed element is an implicit array definition, this property will be set to a string (e.g., the string '[]'). If the typed element is a single value (not an array), this property will be null. Do not rely on the actual value of the string.
_UI_FStructType_base_feature = Base
_UI_FStructType_base_description = the base struct from which this struct inherits. Franca supports single inheritance for structs.
_UI_FEnumerator_value_feature = Value
_UI_FEnumerator_value_description = the value of this enumerator. As the value definition for an enumerator is optional, value might be null.
_UI_FEnumerationType_enumerators_feature = Enumerators
_UI_FEnumerationType_enumerators_description = the list of enumerators of this enumeration
_UI_FEnumerationType_base_feature = Base
_UI_FEnumerationType_base_description = the base type of this enumeration. Will be null if this enumeration is not derived from any other enumeration.
_UI_FMapType_keyType_feature = Key Type
_UI_FMapType_keyType_description = the key type which is mapped to the value type. Note: Some IDLs (e.g. D-Bus Introspection) do not allow complex types as keys. Franca doesn't have this restriction.
_UI_FMapType_valueType_feature = Value Type
_UI_FMapType_valueType_description = the value type of this map. It might be a predefined or a user-defined type.
_UI_FTypeRef_predefined_feature = Predefined
_UI_FTypeRef_predefined_description = if the referenced type is a predefined type, this property gives the actual predefined type. If the reference type is a user-defined type, this property will be null.
_UI_FTypeRef_derived_feature = Derived
_UI_FTypeRef_derived_description = if the referenced type is a user-defined type, this property gives the actual complex type definition. If the reference type is a predefined type, this property will be null.
_UI_FAnnotation_type_feature = Type
_UI_FAnnotation_type_description = the tag of this comment (i.e., the type of this annotation).
_UI_FAnnotation_comment_feature = Comment
_UI_FAnnotation_comment_description = the actual comment as part of an FAnnotation
_UI_FAnnotationBlock_elements_feature = Elements
_UI_FAnnotationBlock_elements_description = the elements of this annotation block. Each element represents one tagged comment.
_UI_FContract_stateGraph_feature = State Graph
_UI_FContract_stateGraph_description = the protocol state machine for this contract. It might use the state variables specified by the variables property.
_UI_FContract_variables_feature = Variables
_UI_FContract_variables_description = the declarations of all state variables used by the protocol state machine of this contract
_UI_FStateGraph_initial_feature = Initial
_UI_FStateGraph_initial_description = this property references the initial state for the protocol state machine.
_UI_FStateGraph_states_feature = States
_UI_FStateGraph_states_description = the list of states comprising this protocol state machine. It contains the intial state.
_UI_FState_transitions_feature = Transitions
_UI_FState_transitions_description = the list of outgoing transitions for this state. These transitions lead to the successor states of this state.
_UI_FTransition_trigger_feature = Trigger
_UI_FTransition_trigger_description = the trigger which fires this transition
_UI_FTransition_guard_feature = Guard
_UI_FTransition_guard_description = an optional guard for this transition
_UI_FTransition_to_feature = To
_UI_FTransition_to_description = the target state of this transition
_UI_FTransition_action_feature = Action
_UI_FTransition_action_description = an optional action which is executed each time this transition fires
_UI_FTrigger_event_feature = Event
_UI_FTrigger_event_description = the event which will trigger this transition
_UI_FEventOnIf_call_feature = Call
_UI_FEventOnIf_call_description = if this property is not null, this event represents the calling of a Franca method by a client
_UI_FEventOnIf_respond_feature = Respond
_UI_FEventOnIf_respond_description = if this property is not null, this event represents the response of a Franca method by the server
_UI_FEventOnIf_signal_feature = Signal
_UI_FEventOnIf_signal_description = if this property is not null, this event represents the sending of a Franca broadcast by the server
_UI_FEventOnIf_set_feature = Set
_UI_FEventOnIf_set_description = if this property is not null, this event represents the setting of a Franca attribute
_UI_FEventOnIf_update_feature = Update
_UI_FEventOnIf_update_description = if this property is not null, this event represents the update action of a Franca attribute
_UI_FGuard_condition_feature = Condition
_UI_FGuard_condition_description = the boolean condition of this transition guard
_UI_FUnionType_base_feature = Base
_UI_FUnionType_base_description = the base union from which this union inherits. Franca supports single inheritance for unions.
_UI_FBlockExpression_expressions_feature = Expressions
_UI_FBlockExpression_expressions_description = the sequence of expressions represented by this block. This is a composite pattern used to specify a tree of expressions.
_UI_FAssignment_lhs_feature = Lhs
_UI_FAssignment_lhs_description = the left-hand side of this assignment. It references the state variable which should be set by specifying its declaration.
_UI_FAssignment_rhs_feature = Rhs
_UI_FAssignment_rhs_description = the right-hand side of an assignment. This may be an arbitrary expression of the Franca contract action language.
_UI_FIntegerConstant_val_feature = Val
_UI_FIntegerConstant_val_description = the value of this integer constant (an actual integer)
_UI_FBooleanConstant_val_feature = Val
_UI_FStringConstant_val_feature = Val
_UI_FBinaryOperation_left_feature = Left
_UI_FBinaryOperation_left_description = the left operand of the binary operation
_UI_FBinaryOperation_op_feature = Op
_UI_FBinaryOperation_op_description = the operator of this binary operation (e.g., '||', '+', '*', '<', and many more). Consider the FrancaIDL.xtext grammar definition for an overview of all binary operators supported by Franca contract action language.
_UI_FBinaryOperation_right_feature = Right
_UI_FBinaryOperation_right_description = the right operand of the binary operation
_UI_Unknown_feature = Unspecified

_UI_FBasicTypeId_undefined_literal = undefined
_UI_FBasicTypeId_Int8_literal = Int8
_UI_FBasicTypeId_UInt8_literal = UInt8
_UI_FBasicTypeId_Int16_literal = Int16
_UI_FBasicTypeId_UInt16_literal = UInt16
_UI_FBasicTypeId_Int32_literal = Int32
_UI_FBasicTypeId_UInt32_literal = UInt32
_UI_FBasicTypeId_Int64_literal = Int64
_UI_FBasicTypeId_UInt64_literal = UInt64
_UI_FBasicTypeId_Boolean_literal = Boolean
_UI_FBasicTypeId_String_literal = String
_UI_FBasicTypeId_Float_literal = Float
_UI_FBasicTypeId_Double_literal = Double
_UI_FBasicTypeId_ByteBuffer_literal = ByteBuffer
_UI_FAnnotationType_undefined_literal = undefined
_UI_FAnnotationType_description_literal = @description
_UI_FAnnotationType_author_literal = @author
_UI_FAnnotationType_experimental_literal = @experimental
_UI_FAnnotationType_deprecated_literal = @deprecated
_UI_FAnnotationType_see_literal = @see
_UI_FAnnotationType_param_literal = @param
_UI_FAnnotationType_high_volume_literal = @high-volume
_UI_FAnnotationType_high_frequency_literal = @high-frequency
_UI_FAnnotationType_source_uri_literal = @source-uri
_UI_FAnnotationType_source_alias_literal = @source-alias
_UI_FAnnotationType_details_literal = @details
_UI_FInterface_managedInterfaces_feature = Managed Interfaces
_UI_FInterface_managedInterfaces_description = the list of interfaces managed by this interface. The interface will provide methods for discovery and handling of the runtime instances of the managed interfaces. The actual implementation depends on the specific target runtime platform.
_UI_FStructType_polymorphic_feature = Polymorphic
_UI_FStructType_polymorphic_description = indicates if struct is the root of a polymorphic type hierarchy. Structs may be either extended from a base struct or polymorphic (or none of both).
_UI_FBooleanConstant_val_description = the value of this boolean constant (an actual boolean)
_UI_FStringConstant_val_description = the value of this string constant (an actual string)
_UI_FUnaryOperation_type = FUnary Operation
_UI_FUnaryOperation_op_feature = Op
_UI_FUnaryOperation_operand_feature = Operand
_UI_FBlock_type = FBlock
_UI_FStatement_type = FStatement
_UI_FOperation_type = FOperation
_UI_FBlock_statements_feature = Statements
_UI_FOperation_op_feature = Op
_UI_FEqualityOperator_Equal_literal = ==
_UI_FEqualityOperator_Unequal_literal = !=
_UI_FRelationalOperator_Smaller_literal = <
_UI_FRelationalOperator_SmallerOrEqual_literal = <=
_UI_FRelationalOperator_GreaterOrEqual_literal = >=
_UI_FRelationalOperator_Greater_literal = >
_UI_FMultiplicativeOperator_multiplication_literal = *
_UI_FMultiplicativeOperator_division_literal = /
_UI_FAdditiveOperator_addition_literal = +
_UI_FAdditiveOperator_subtraction_literal = -
_UI_FOperator_Or_literal = ||
_UI_FOperator_Equal_literal = ==
_UI_FOperator_Unequal_literal = !=
_UI_FOperator_And_literal = &&
_UI_FOperator_Smaller_literal = <
_UI_FOperator_SmallerOrEqual_literal = <=
_UI_FOperator_GreaterOrEqual_literal = >=
_UI_FOperator_Greater_literal = >
_UI_FOperator_addition_literal = +
_UI_FOperator_subtraction_literal = -
_UI_FOperator_multiplication_literal = *
_UI_FOperator_division_literal = /
_UI_FOperator_negation_literal = !
_UI_FEventOnIf_error_feature = Error
_UI_FCurrentError_type = FCurrent Error
_UI_FCurrentError_type_feature = Type
_UI_FQualifiedElementRef_type = FQualified Element Ref
_UI_FQualifiedElementRef_element_feature = Element
_UI_FQualifiedElementRef_qualifier_feature = Qualifier
_UI_FQualifiedElementRef_field_feature = Field
_UI_FConstantDef_type = FConstant Def
_UI_FTypeCollection_constants_feature = Constants
_UI_FConstantDef_rhs_feature = Rhs
_UI_FInitializer_type = FInitializer
_UI_FStructInitializer_type = FStruct Initializer
_UI_FStructInitializer_elements_feature = Elements
_UI_FInitializerExpression_type = FInitializer Expression
_UI_FArrayInitializer_type = FArray Initializer
_UI_FArrayInitializer_elements_feature = Elements
_UI_FUnionInitializer_type = FUnion Initializer
_UI_FMapInitializer_type = FMap Initializer
_UI_FMapElementInitializer_type = FMap Element Initializer
_UI_FUnionInitializer_element_feature = Element
_UI_FUnionInitializer_value_feature = Value
_UI_FMapInitializer_elements_feature = Elements
_UI_FMapElementInitializer_key_feature = Key
_UI_FMapElementInitializer_value_feature = Value
_UI_FIfClause_type = FIf Clause
_UI_FIfClause_condition_feature = Condition
_UI_FIfClause_statements_feature = Statements
_UI_FIfClause_elseClause_feature = Else Clause
_UI_FIntegerInterval_type = FInteger Interval
_UI_FTypeRef_interval_feature = Interval
_UI_FIntegerInterval_lowerBound_feature = Lower Bound
_UI_FIntegerInterval_upperBound_feature = Upper Bound
_UI_FDoubleConstant_type = FDouble Constant
_UI_FFloatConstant_type = FFloat Constant
_UI_FDoubleConstant_val_feature = Val
_UI_FFloatConstant_val_feature = Val
_UI_FCompoundInitializer_type = FCompound Initializer
_UI_FFieldInitializer_type = FField Initializer
_UI_FCompoundInitializer_elements_feature = Elements
_UI_FFieldInitializer_element_feature = Element
_UI_FFieldInitializer_value_feature = Value
_UI_FAnnotation_rawText_feature = Raw Text
_UI_FElementInitializer_type = FElement Initializer
_UI_FElementInitializer_key_feature = Key
_UI_FElementInitializer_value_feature = Value
_UI_FBracketInitializer_type = FBracket Initializer
_UI_FBracketInitializer_elements_feature = Elements
_UI_FElementInitializer_first_feature = First
_UI_FElementInitializer_second_feature = Second
_UI_FEnumerator_expr_feature = Expr
_UI_FDeclaration_rhs_feature = Rhs
_UI_FIfStatement_type = FIf Statement
_UI_FIfStatement_condition_feature = Condition
_UI_FIfStatement_then_feature = Then
_UI_FIfStatement_else_feature = Else
_UI_FMethod_selector_feature = Selector
_UI_FBroadcast_selector_feature = Selector
_UI_FEvaluableElement_type = FEvaluable Element
_UI_FMethodErrorEnumRef_type = FMethod Error Enum Ref
_UI_FMethodErrorEnumRef_element_feature = Element
_UI_FMethodErrorEnumRef_enumerator_feature = Enumerator
_UI_FMethod_errorComment_feature = Error Comment
