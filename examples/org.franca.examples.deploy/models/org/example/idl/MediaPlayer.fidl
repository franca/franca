package org.example.idl

import org.example.idl.CommonTypes.* from "CommonTypes.fidl"

<** @description : Media playback interface.

    This is a synthetic example interface. There might be an implementation
    somewhere, but its main purpose is to demonstrate the various Franca IDL features.
    
    The interface definition uses some basic data types, which are defined
    in a separate Franca IDL file (i.e., CommonTypes.fidl).
**> 
interface MediaPlayer {
	version { major 4 minor 2 }

	<** @description: Playlist which is currently active. **>
	attribute Playlist currentPlaylist

	<** @description: Track which is currently playing. **>
	attribute TrackId currentTrack
	
	<** @description: Remaining duration of current track. **>
	attribute Duration remainingTrack
	
	<** @description: Remaining duration of current playlist. **>
	attribute Duration remainingAll
	
	<** @description: Track which is currently playing. **>
	attribute RepeatMode mode
		
	<** @description: Get the metadata of any track, given its id. **>
	method getMetadata {
		in {
			TrackId trackId
		}
		out {
			<** @description: A struct containing the metadata. **>
			TrackInfo info
		}
	}

	<** @description: Clear the playlist. **>
	method clear { }	

	<** @description: Append another track to the playlist. **>
	method appendTrack {
		in {
			TrackId trackId
		}
	}
	
	<** @description: Start playing the current playlist or resume playing
	                  after pause(). **>
	method play { }

	<** @description: Pause playing the current playlist. **>
	method pause { }
	
	<** @description: Set current repeat mode. **>
	method setRepeatMode {
		in {
			RepeatMode mode
		}
	}
	
	<** @description: Switch to the next track (if any). **>
	method nextTrack { } 

	<** @description: Switch to the previous track (if any). **>
	method previousTrack { } 

	<** @description: Indicate end of playlist. **>
	broadcast endOfPlaylist { }	


	// *** data types

	<** @description : Repeat modes for playback. **>
	enumeration RepeatMode {
		MODE_REPEAT_NONE   = 0
		MODE_REPEAT_SINGLE = 1
		MODE_REPEAT_ALL    = 2
	}

	<** @description: Track metadata. **>
	struct TrackInfo {
		String title
		String album
		String interpret
		String composer
		String genre
		Year year
		Duration trackLength
	}

	<** @description: Simple playlist (as an array of track ids). **>
	array Playlist of TrackId

}

